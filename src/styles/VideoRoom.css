.video-room-container {
  display: flex;
  flex-direction: column;
  height: 100vh;
  background-color: #1a1a1a;
  color: white;
}

.main-content-wrapper {
  display: flex;
  flex-grow: 1;
  overflow: hidden;
}

.video-grid-main {
  flex-grow: 1;
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 8px;
  padding: 8px;
  box-sizing: border-box;
}

.participant-view {
  background-color: #2c2c2c;
  border-radius: 8px;
  position: relative;
  overflow: visible;
}

.participant-view.local {
  position: relative;
}

/* .output_canvas {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 10;
  transform: scaleX(-1);
} */
.overlay-canvas {
  position: fixed;       /* covers window, not scrolled */
  top: 0;
  left: 0;
  inset: 0;
  width: 100vw;
  height: 100vh;
  z-index: 900;          /* above every UI element */
  pointer-events: none;  /* clicks pass through */
}

.video-feed {
  width: 100%;
  height: 100%;
  transform: scaleX(-1);
}

.participant-name {
  position: absolute;
  bottom: 8px;
  left: 8px;
  background-color: rgba(0, 0, 0, 0.5);
  padding: 4px 8px;
  border-radius: 4px;
  font-size: 14px;
}


.controls-bar {
  height: 90px;
  background-color: #252525;
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0 24px;
  flex-shrink: 0;
  position: relative; /* For drawing controls positioning */
}

.sticker-button {
  font-size: 24px;
  cursor: pointer;
}

.control-buttons {
  display: flex;
  gap: 16px;
}

.control-buttons button {
  background: #3a3a3a;
  color: white;
  border: none;
  border-radius: 12px;
  width: 52px;
  height: 52px;
  cursor: pointer;
  font-size: 22px;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: background-color 0.2s;
}

.control-buttons button:hover {
  background-color: #4a4a4a;
}

.control-buttons .leave-btn {
  background-color: #e74c3c;
}

.control-buttons .leave-btn:hover {
  background-color: #c0392b;
}

.drawing-controls {
  position: absolute;
  bottom: 100px; /* Position above the controls bar */
  left: 50%;
  transform: translateX(-50%);
  background-color: #333;
  padding: 12px;
  border-radius: 12px;
  display: flex;
  align-items: center;
  gap: 16px;
  box-shadow: 0 4px 12px rgba(0,0,0,0.3);
}

.drawing-controls input[type="color"] {
  width: 36px;
  height: 36px;
  border: none;
  padding: 0;
  border-radius: 8px;
  cursor: pointer;
}

.drawing-controls input[type="range"] {
  width: 120px;
}

.drawing-controls button {
  background: #555;
  color: white;
  border: none;
  padding: 8px 16px;
  border-radius: 8px;
  cursor: pointer;
  transition: background-color 0.2s;
}

.drawing-controls button:hover {
  background-color: #666;
}

.chat-panel {
  width: 320px;
  background-color: #252525;
  border-left: 1px solid #444;
  display: flex;
  flex-direction: column;
  flex-shrink: 0; 
}

.chat-messages {
  flex-grow: 1;
  padding: 16px;
  overflow-y: auto;
}

.message {
  margin-bottom: 12px;
}
.message.self {
  text-align: right;
}

.chat-input {
  display: flex;
  padding: 16px;
  border-top: 1px solid #444;
}

.chat-input input {
  flex-grow: 1;
  background: #333;
  border: 1px solid #555;
  color: white;
  padding: 8px 12px;
  border-radius: 16px;
  margin-right: 8px;
}

.chat-input button {
  background: var(--brand-orange);
  color: #222;
  border: none;
  border-radius: 16px;
  padding: 8px 16px;
  cursor: pointer;
}


.gesture-display {
  position: absolute;
  top: 10px;
  left: 10px;
  background: rgba(0,0,0,0.6);
  color: white;
  padding: 5px 10px;
  border-radius: 5px;
  font-size: 16px;
  z-index: 950;
}

.cursor {
  position: fixed;
  width: 24px; /* 아이콘 크기에 맞게 조정 */
  height: 24px; /* 아이콘 크기에 맞게 조정 */
  background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="white" stroke="black" stroke-width="1"><path d="M4 4l16 12-7 1-3 7-6-20z"/></svg>');
  background-size: contain;
  background-repeat: no-repeat;
  transform: translate(-50%, -50%);
  z-index: 960;
  pointer-events: none; /* 커서가 다른 요소의 이벤트를 막지 않도록 함 */
  transform-origin: top left; /* SVG 커서의 포인터 위치에 맞게 조정 */
  transition: transform 0.1s ease;
}

.cursor.grabbing {
  transform: scale(0.8); /* 클릭 시 작아지는 효과 */
}

.sticker {
  position: absolute;
  z-index: 99;
  cursor: grab;
  display: flex;
  align-items: center;
  justify-content: center;
  user-select: none;
}
